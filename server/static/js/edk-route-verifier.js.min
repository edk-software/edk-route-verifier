/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/routeVerifier.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/loglevel/lib/loglevel.js":
/*!***********************************************!*\
  !*** ./node_modules/loglevel/lib/loglevel.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    return defaultLogger;\n}));\n\n\n//# sourceURL=webpack:///./node_modules/loglevel/lib/loglevel.js?");

/***/ }),

/***/ "./src/Context.js":
/*!************************!*\
  !*** ./src/Context.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction _default() {\n  this.routeUrl = $('div#map-canvas').attr('data-what');\n  this.routeParamsUrl = $('div#map-canvas').attr('data-route-params');\n  this.routeApproveUrl = $('div#map-canvas').attr('data-route-approve');\n}\n\n//# sourceURL=webpack:///./src/Context.js?");

/***/ }),

/***/ "./src/Controls.js":
/*!*************************!*\
  !*** ./src/Controls.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("throw new Error(\"Module build failed: SyntaxError: D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\src\\\\Controls.js: Support for the experimental syntax 'classProperties' isn't currently enabled (168:21):\\n\\n  166 |     }\\n  167 | \\n> 168 |     static resetAll = function(value) {\\n      |                     ^\\n  169 |         const text = '';\\n  170 |         const isValid = value === undefined ? null : value;\\n  171 | \\n\\nAdd @babel/plugin-proposal-class-properties (https://git.io/vb4SL) to the 'plugins' section of your Babel config to enable transformation.\\n    at Parser.raise (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:772:15)\\n    at Parser.expectPlugin (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:2052:18)\\n    at Parser.parseClassProperty (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4824:12)\\n    at Parser.pushClassProperty (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4791:30)\\n    at Parser.parseClassMemberWithIsStatic (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4724:14)\\n    at Parser.parseClassMember (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4661:10)\\n    at Parser.parseClassBody (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4619:12)\\n    at Parser.parseClass (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4569:10)\\n    at Parser.parseExportDefaultExpression (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4919:19)\\n    at Parser.parseExport (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4884:31)\\n    at Parser.parseStatementContent (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:3982:27)\\n    at Parser.parseStatement (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:3899:17)\\n    at Parser.parseBlockOrModuleBlockBody (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4426:23)\\n    at Parser.parseBlockBody (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4413:10)\\n    at Parser.parseTopLevel (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:3875:10)\\n    at Parser.parse (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:5201:17)\\n    at parse (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:9881:38)\\n    at parser (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\transformation\\\\normalize-file.js:106:33)\\n    at normalizeFile (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\transformation\\\\normalize-file.js:53:11)\\n    at runSync (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\transformation\\\\index.js:34:41)\\n    at transformSync (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\transform-sync.js:15:38)\\n    at Object.transform (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\transform.js:20:65)\\n    at transpile (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js:55:20)\\n    at Object.module.exports (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js:179:20)\");\n\n//# sourceURL=webpack:///./src/Controls.js?");

/***/ }),

/***/ "./src/Route.js":
/*!**********************!*\
  !*** ./src/Route.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("throw new Error(\"Module build failed: TypeError: Cannot read property 'bindings' of null\\n    at Scope.moveBindingTo (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\traverse\\\\lib\\\\scope\\\\index.js:929:13)\\n    at convertBlockScopedToVar (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\babel-plugin-transform-es2015-block-scoping\\\\lib\\\\index.js:139:13)\\n    at PluginPass.VariableDeclaration (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\babel-plugin-transform-es2015-block-scoping\\\\lib\\\\index.js:26:9)\\n    at newFn (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\traverse\\\\lib\\\\visitors.js:223:21)\\n    at NodePath._call (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\traverse\\\\lib\\\\path\\\\context.js:64:19)\\n    at NodePath.call (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\traverse\\\\lib\\\\path\\\\context.js:38:17)\\n    at NodePath.visit (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\traverse\\\\lib\\\\path\\\\context.js:99:12)\\n    at TraversalContext.visitQueue (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\traverse\\\\lib\\\\context.js:135:18)\\n    at TraversalContext.visitMultiple (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\traverse\\\\lib\\\\context.js:89:17)\\n    at TraversalContext.visit (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\traverse\\\\lib\\\\context.js:174:19)\\n    at Function.traverse.node (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\traverse\\\\lib\\\\index.js:76:17)\\n    at NodePath.visit (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\traverse\\\\lib\\\\path\\\\context.js:106:18)\\n    at TraversalContext.visitQueue (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\traverse\\\\lib\\\\context.js:135:18)\\n    at TraversalContext.visitSingle (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\traverse\\\\lib\\\\context.js:94:19)\\n    at TraversalContext.visit (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\traverse\\\\lib\\\\context.js:176:19)\\n    at Function.traverse.node (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\traverse\\\\lib\\\\index.js:76:17)\\n    at traverse (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\traverse\\\\lib\\\\index.js:46:12)\\n    at transformFile (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\transformation\\\\index.js:107:27)\\n    at runSync (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\transformation\\\\index.js:35:3)\\n    at transformSync (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\transform-sync.js:15:38)\\n    at Object.transform (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\transform.js:20:65)\\n    at transpile (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js:55:20)\\n    at Object.module.exports (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js:179:20)\");\n\n//# sourceURL=webpack:///./src/Route.js?");

/***/ }),

/***/ "./src/helpers.js":
/*!************************!*\
  !*** ./src/helpers.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("throw new Error(\"Module build failed: SyntaxError: D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\src\\\\helpers.js: Support for the experimental syntax 'objectRestSpread' isn't currently enabled (38:32):\\n\\n  36 | \\n  37 |     static reverseLineString(lineString) {\\n> 38 |         const newLineString = {...lineString};\\n     |                                ^\\n  39 |         newLineString.geometry.coordinates = lineString.geometry.coordinates.reverse();\\n  40 |         return newLineString;\\n  41 |     }\\n\\nAdd @babel/plugin-proposal-object-rest-spread (https://git.io/vb4Ss) to the 'plugins' section of your Babel config to enable transformation.\\n    at Parser.raise (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:772:15)\\n    at Parser.expectPlugin (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:2052:18)\\n    at Parser.parseObj (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:3433:14)\\n    at Parser.parseExprAtom (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:3069:21)\\n    at Parser.parseExprSubscripts (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:2705:21)\\n    at Parser.parseMaybeUnary (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:2684:21)\\n    at Parser.parseExprOps (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:2596:21)\\n    at Parser.parseMaybeConditional (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:2568:21)\\n    at Parser.parseMaybeAssign (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:2526:21)\\n    at Parser.parseVar (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4495:26)\\n    at Parser.parseVarStatement (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4325:10)\\n    at Parser.parseStatementContent (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:3949:21)\\n    at Parser.parseStatement (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:3899:17)\\n    at Parser.parseBlockOrModuleBlockBody (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4426:23)\\n    at Parser.parseBlockBody (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4413:10)\\n    at Parser.parseBlock (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4402:10)\\n    at Parser.parseFunctionBody (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:3691:24)\\n    at Parser.parseFunctionBodyAndFinish (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:3671:10)\\n    at Parser.parseMethod (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:3623:10)\\n    at Parser.pushClassMethod (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4800:30)\\n    at Parser.parseClassMemberWithIsStatic (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4719:12)\\n    at Parser.parseClassMember (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4661:10)\\n    at Parser.parseClassBody (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4619:12)\\n    at Parser.parseClass (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4569:10)\\n    at Parser.parseExportDefaultExpression (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4919:19)\\n    at Parser.parseExport (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4884:31)\\n    at Parser.parseStatementContent (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:3982:27)\\n    at Parser.parseStatement (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:3899:17)\\n    at Parser.parseBlockOrModuleBlockBody (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4426:23)\\n    at Parser.parseBlockBody (D:\\\\IT\\\\Code\\\\edk-route-verifier\\\\node_modules\\\\@babel\\\\core\\\\node_modules\\\\babylon\\\\lib\\\\index.js:4413:10)\");\n\n//# sourceURL=webpack:///./src/helpers.js?");

/***/ }),

/***/ "./src/routeVerifier.js":
/*!******************************!*\
  !*** ./src/routeVerifier.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _loglevel = _interopRequireDefault(__webpack_require__(/*! loglevel */ \"./node_modules/loglevel/lib/loglevel.js\"));\n\nvar _helpers = _interopRequireDefault(__webpack_require__(/*! ./helpers */ \"./src/helpers.js\"));\n\nvar _Route = _interopRequireDefault(__webpack_require__(/*! ./Route */ \"./src/Route.js\"));\n\nvar _Context = _interopRequireDefault(__webpack_require__(/*! ./Context */ \"./src/Context.js\"));\n\nvar _Controls = _interopRequireDefault(__webpack_require__(/*! ./Controls */ \"./src/Controls.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction verifyRoute() {\n  var context = new _Context.default();\n  var controls = new _Controls.default();\n  controls.resetAll();\n  controls.addLoaderToButton();\n\n  _helpers.default.getRoute(context.routeUrl).done(function (data) {\n    var geoJson = _helpers.default.getGeoJSON(data);\n\n    var route = new _Route.default(geoJson);\n\n    if (!route.isVerifiable()) {\n      _loglevel.default.error('Critical error. Route is unverifiable.');\n\n      controls.resetAll(false);\n      return;\n    } // Path basic checks\n\n\n    var isSinglePath = route.isSinglePath();\n    controls.updateSinglePath(isSinglePath);\n    var routeLength = route.getPathLength();\n    var isPathLengthValid = true;\n    controls.updatePathLength(isPathLengthValid, routeLength); // Station checks\n\n    var areAllStationsPresent = route.areAllStationsPresent();\n    controls.updateNumberOfStations(areAllStationsPresent);\n    var isStationOrderCorrect = route.isStationOrderCorrect();\n    controls.updateStationsOrder(isStationOrderCorrect);\n    var areStationsOnThePath = route.areStationsOnThePath();\n    controls.updateStationsOnPath(areStationsOnThePath); // Elevation checks\n\n    route.fetchPathElevationData().then(function () {\n      var pathElevation = route.getPathElevation();\n      pathElevation.enrichData(routeLength);\n      var isPathElevationGainValid = true;\n      controls.updateElevationGain(isPathElevationGainValid, pathElevation.gain);\n      var isNormalRoute = routeLength >= 40 || pathElevation.gain > 500 && routeLength >= 30;\n      controls.updateRouteType(isNormalRoute);\n      var isPathElevationLossValid = true;\n      controls.updateElevationLoss(isPathElevationLossValid, pathElevation.loss);\n      var isPathElevationTotalChangeValid = true;\n      controls.updateElevationTotalChange(isPathElevationTotalChangeValid, pathElevation.totalChange);\n      controls.drawElevationChart(pathElevation);\n\n      _helpers.default.getRouteParameters(context.routeParamsUrl).then(function (parameters) {\n        var ACCEPTED_ROUTE_LENGTH_DIFF = 1; //km\n\n        var ACCEPTED_ELEVATION_GAIN_DIFF = 50; //m\n\n        var NORMAL_ROUTE_TYPE = 0;\n        var INSPIRED_ROUTE_TYPE = 1;\n        var isLengthConsistent = routeLength - ACCEPTED_ROUTE_LENGTH_DIFF <= parameters.length && parameters.length <= routeLength + ACCEPTED_ROUTE_LENGTH_DIFF;\n        var isElevationGainConsistent = pathElevation.gain - ACCEPTED_ELEVATION_GAIN_DIFF <= parameters.ascent && parameters.ascent <= pathElevation.gain + ACCEPTED_ELEVATION_GAIN_DIFF;\n        var isRouteTypeConsistent = parameters.type === (isNormalRoute ? NORMAL_ROUTE_TYPE : INSPIRED_ROUTE_TYPE);\n        var isDataConsistent = isLengthConsistent && isElevationGainConsistent && isRouteTypeConsistent;\n\n        _loglevel.default.debug('isLengthConsistent:', isLengthConsistent, ', isElevationGainConsistent:', isElevationGainConsistent, ', isRouteTypeConsistent:', isRouteTypeConsistent);\n\n        controls.updateDataConsistency(isDataConsistent);\n        var canRouteBeAutomaticallyApproved = isPathLengthValid && isPathLengthValid && areAllStationsPresent && isStationOrderCorrect && areStationsOnThePath && isPathElevationGainValid && isPathElevationLossValid && isPathElevationTotalChangeValid && isDataConsistent;\n\n        if (canRouteBeAutomaticallyApproved) {\n          _loglevel.default.info('Route verification success. Approving...');\n\n          _helpers.default.approveRoute(context.routeApproveUrl).then(function () {\n            _loglevel.default.info('Route approved.');\n\n            var reloadTimeout = setTimeout(function () {\n              window.location.reload(1);\n            }, 5000);\n            $('div#pageReloadModal').on('hide.bs.modal', function (e) {\n              clearTimeout(reloadTimeout);\n            });\n            $('div#pageReloadModal').modal();\n          }).catch(function (error) {\n            _loglevel.default.error('Route approval error.', error);\n          });\n        } else {\n          _loglevel.default.info('Route verification failed. Cannot be approved.');\n        }\n      }).catch(function (error) {\n        _loglevel.default.error('Route parameters data fetching error.', error);\n      });\n    }).catch(function (error) {\n      _loglevel.default.error('Path elevation data fetching error.', error);\n\n      controls.updateElevationGain(false, 0);\n      controls.updateElevationLoss(false, 0);\n      controls.updateElevationTotalChange(false, 0);\n      controls.updateDataConsistency(false);\n    });\n  }).fail(function (xhr, status) {\n    _loglevel.default.error('Route fetching error. Status:', status);\n  }).always(function () {\n    controls.removeLoaderFromButton();\n  });\n}\n\n_loglevel.default.setLevel('warn'); // Uncomment to set maximum loglevel\n\n\n_loglevel.default.enableAll();\n\n$(\"button#verifyRoute\").bind(\"click\", verifyRoute);\n\n//# sourceURL=webpack:///./src/routeVerifier.js?");

/***/ })

/******/ });